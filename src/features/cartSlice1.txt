// cartSlice.js
import { createSlice } from "@reduxjs/toolkit";
import headphonesData from "../db/headphonesData";
import shoesData from "../db/shoesData";

const cartSlice = createSlice({
  name: "cart",
  initialState: { shoes: shoesData, headphones: headphonesData },
  reducers: {
    addToCart: (state, action) => {
      const { category, id } = action.payload;
      const existingItem = state[category].find((item) => item.id === id);

      if (existingItem) {
        existingItem.quantity += 1;
      } else {
        state[category].push({ ...action.payload, quantity: 1 });
      }
    },
    removeFromCart: (state, action) => {
      const { category, id } = action.payload;
      state[category] = state[category].filter((item) => item.id !== id);
    },
    increaseQuantity: (state, action) => {
      const { category, id } = action.payload;
      const item = state[category].find((item) => item.id === id);
      if (item) item.quantity += 1;
    },
    decreaseQuantity: (state, action) => {
      const { category, id } = action.payload;
      const item = state[category].find((item) => item.id === id);
      if (item && item.quantity > 1) item.quantity -= 1;
    },
    clearCart: (state) => {
      state.shoes = [];
      state.headphones = [];
      // Add more arrays as needed
    },
  },
});

export const {
  addToCart,
  removeFromCart,
  increaseQuantity,
  decreaseQuantity,
  clearCart,
} = cartSlice.actions;
export default cartSlice.reducer;
